// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectMediiAplicatieWeb.Data;

namespace ProiectMediiAplicatieWeb.Migrations
{
    [DbContext(typeof(ProiectMediiAplicatieWebContext))]
    [Migration("20220105120738_CreationBibliotecar")]
    partial class CreationBibliotecar
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Autor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nume_Autor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Bibliotecar", b =>
                {
                    b.Property<int>("CNP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nume_Bibliotecar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume_Bibliotecar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numar_telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CNP");

                    b.ToTable("Bibliotecar");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Carte", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<int?>("BibliotecarCNP")
                        .HasColumnType("int");

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume_Carte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pagini")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("BibliotecarCNP");

                    b.ToTable("Carte");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Carte", b =>
                {
                    b.HasOne("ProiectMediiAplicatieWeb.Models.Autor", "Autor")
                        .WithMany("Books")
                        .HasForeignKey("AutorID");

                    b.HasOne("ProiectMediiAplicatieWeb.Models.Bibliotecar", "Bibliotecar")
                        .WithMany("Carte_Imprumutata")
                        .HasForeignKey("BibliotecarCNP");

                    b.Navigation("Autor");

                    b.Navigation("Bibliotecar");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Autor", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Bibliotecar", b =>
                {
                    b.Navigation("Carte_Imprumutata");
                });
#pragma warning restore 612, 618
        }
    }
}
