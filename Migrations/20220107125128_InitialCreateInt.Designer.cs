// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectMediiAplicatieWeb.Data;

namespace ProiectMediiAplicatieWeb.Migrations
{
    [DbContext(typeof(ProiectMediiAplicatieWebContext))]
    [Migration("20220107125128_InitialCreateInt")]
    partial class InitialCreateInt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Autor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nume_Autor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Bibliotecar", b =>
                {
                    b.Property<int>("CNP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Carte_ImprumutataID")
                        .HasColumnType("int");

                    b.Property<string>("Nume_Bibliotecar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume_Bibliotecar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numar_telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CNP");

                    b.HasIndex("Carte_ImprumutataID");

                    b.ToTable("Bibliotecar");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Carte", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume_Carte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pagini")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.ToTable("Carte");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Client", b =>
                {
                    b.Property<int>("CNP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Carte_Luata_ImprumutID")
                        .HasColumnType("int");

                    b.Property<string>("Nume_Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume_Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numar_telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CNP");

                    b.HasIndex("Carte_Luata_ImprumutID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Imprumut", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<int?>("Carte_ImprumutataID")
                        .HasColumnType("int");

                    b.Property<int?>("ClientCNP")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Retur")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("Carte_ImprumutataID");

                    b.HasIndex("ClientCNP");

                    b.ToTable("Imprumut");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Bibliotecar", b =>
                {
                    b.HasOne("ProiectMediiAplicatieWeb.Models.Carte", "Carte_Imprumutata")
                        .WithMany("Bibliotecar")
                        .HasForeignKey("Carte_ImprumutataID");

                    b.Navigation("Carte_Imprumutata");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Carte", b =>
                {
                    b.HasOne("ProiectMediiAplicatieWeb.Models.Autor", "Autor")
                        .WithMany("Books")
                        .HasForeignKey("AutorID");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Client", b =>
                {
                    b.HasOne("ProiectMediiAplicatieWeb.Models.Carte", "Carte_Luata_Imprumut")
                        .WithMany("Client")
                        .HasForeignKey("Carte_Luata_ImprumutID");

                    b.Navigation("Carte_Luata_Imprumut");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Imprumut", b =>
                {
                    b.HasOne("ProiectMediiAplicatieWeb.Models.Autor", "Autor")
                        .WithMany("Imprumut")
                        .HasForeignKey("AutorID");

                    b.HasOne("ProiectMediiAplicatieWeb.Models.Carte", "Carte_Imprumutata")
                        .WithMany("Imprumut")
                        .HasForeignKey("Carte_ImprumutataID");

                    b.HasOne("ProiectMediiAplicatieWeb.Models.Client", "Client")
                        .WithMany("Imprumut")
                        .HasForeignKey("ClientCNP");

                    b.Navigation("Autor");

                    b.Navigation("Carte_Imprumutata");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Autor", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Imprumut");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Carte", b =>
                {
                    b.Navigation("Bibliotecar");

                    b.Navigation("Client");

                    b.Navigation("Imprumut");
                });

            modelBuilder.Entity("ProiectMediiAplicatieWeb.Models.Client", b =>
                {
                    b.Navigation("Imprumut");
                });
#pragma warning restore 612, 618
        }
    }
}
